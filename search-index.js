crystal_doc_search_index_callback({"repository_name":"github.com/crystal-community/hardware","body":"# hardware\n\n[![GitHub release](https://img.shields.io/github/release/crystal-community/hardware.svg)](https://github.com/crystal-community/hardware/releases)\n[![Build Status](https://travis-ci.org/crystal-community/hardware.svg?branch=master)](https://travis-ci.org/crystal-community/hardware)\n\nA basic module to get CPU, memory and network informations of the current running OS and its processes.\n\nTested on Linux.\n\n## Installation\n\nAdd this to your application's `shard.yml`:\n\n```yaml\ndependencies:\n  hardware:\n    github: crystal-community/hardware\n```\n\n## Documentation\n\nThe documentation is accessible at https://crystal-community.github.io/hardware.\n\nIt is generated with [crystal docs](https://crystal-lang.org/docs/conventions/documenting_code.html) in the `gh-pages` branch.\n\n## Examples\n\n```crystal\nrequire \"hardware\"\n\nmemory = Hardware::Memory.new\nmemory.used         #=> 2731404\nmemory.percent.to_i #=> 32\n\ncpu = Hardware::CPU.new\npid_stat = Hardware::PID.new.stat            # Default is Process.pid\napp_stat = Hardware::PID.new(\"firefox\").stat # Take the first matching PID\n\nloop do\n  sleep 1\n  p cpu.usage!.to_i          #=> 17\n  p pid_stat.cpu_usage!      #=> 1.5\n  p app_stat.cpu_usage!.to_i #=> 4\nend\n```\n## Development\n\n### Docker\n\nYou can run the specs in a Docker container:\n\n```sh\n$ docker-compose up\n$ docker-compose run spec\n```\n\n## Contributing\n\n1. Fork it ( https://github.com/crystal-community/hardware/fork )\n2. Create your feature branch (git checkout -b my-new-feature)\n3. Commit your changes (git commit -am 'Add some feature')\n4. Push to the branch (git push origin my-new-feature)\n5. Create a new Pull Request\n\n## Contributors\n\n- [bararchy](https://github.com/bararchy) - creator, maintainer   \n- [j8r](https://github.com/j8r) - contributor  \n","program":{"html_id":"github.com/crystal-community/hardware/toplevel","path":"toplevel.html","kind":"module","full_name":"Top Level Namespace","name":"Top Level Namespace","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"github.com/crystal-community/hardware","program":true,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"github.com/crystal-community/hardware/Hardware","path":"Hardware.html","kind":"module","full_name":"Hardware","name":"Hardware","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"cpu.cr","line_number":10,"url":"https://github.com/crystal-community/hardware/blob/4be634b02aac96b93f3edfb4a4b4959a22b8d548/src/cpu.cr"},{"filename":"hardware.cr","line_number":3,"url":"https://github.com/crystal-community/hardware/blob/4be634b02aac96b93f3edfb4a4b4959a22b8d548/src/hardware.cr"}],"repository_name":"github.com/crystal-community/hardware","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"github.com/crystal-community/hardware/Hardware/CPU","path":"Hardware/CPU.html","kind":"struct","full_name":"Hardware::CPU","name":"CPU","abstract":false,"superclass":{"html_id":"github.com/crystal-community/hardware/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"github.com/crystal-community/hardware/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/crystal-community/hardware/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/crystal-community/hardware/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"cpu.cr","line_number":10,"url":"https://github.com/crystal-community/hardware/blob/4be634b02aac96b93f3edfb4a4b4959a22b8d548/src/cpu.cr"}],"repository_name":"github.com/crystal-community/hardware","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/crystal-community/hardware/Hardware","kind":"module","full_name":"Hardware","name":"Hardware"},"doc":"CPU related informations of your system.\n\n```\ncpu = Hardware::CPU.new\nloop do\n  sleep 1\n  p cpu.usage!.to_i # => 17\nend\n```","summary":"<p>CPU related informations of your system.</p>","class_methods":[],"constructors":[{"id":"new(number:Int32?=nil,parse_stats:Bool=true)-class-method","html_id":"new(number:Int32?=nil,parse_stats:Bool=true)-class-method","name":"new","doc":"Creates a new CPU stat to monitor the given core.\n\nMust be lower than `System.cpu_count`, or `nil` for the whole cores in total.","summary":"<p>Creates a new CPU stat to monitor the given core.</p>","abstract":false,"args":[{"name":"number","doc":null,"default_value":"nil","external_name":"number","restriction":"Int32 | ::Nil"},{"name":"parse_stats","doc":null,"default_value":"true","external_name":"parse_stats","restriction":"Bool"}],"args_string":"(number : Int32? = <span class=\"n\">nil</span>, parse_stats : Bool = <span class=\"n\">true</span>)","source_link":"https://github.com/crystal-community/hardware/blob/4be634b02aac96b93f3edfb4a4b4959a22b8d548/src/cpu.cr#L17","def":{"name":"new","args":[{"name":"number","doc":null,"default_value":"nil","external_name":"number","restriction":"Int32 | ::Nil"},{"name":"parse_stats","doc":null,"default_value":"true","external_name":"parse_stats","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(number, parse_stats)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"guest-instance-method","html_id":"guest-instance-method","name":"guest","doc":"Returns the \"guest\" stat field.","summary":"<p>Returns the \"guest\" stat field.</p>","abstract":false,"args":[],"args_string":"","source_link":null,"def":{"name":"guest","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if (value = @guest).nil?\n  @guest = (begin\n    parse_stat_file\n    @guest || (raise(\"Field not parsed: 'guest'\"))\n  end)\nelse\n  value\nend"}},{"id":"guest_nice-instance-method","html_id":"guest_nice-instance-method","name":"guest_nice","doc":"Returns the \"guest_nice\" stat field.","summary":"<p>Returns the \"guest_nice\" stat field.</p>","abstract":false,"args":[],"args_string":"","source_link":null,"def":{"name":"guest_nice","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if (value = @guest_nice).nil?\n  @guest_nice = (begin\n    parse_stat_file\n    @guest_nice || (raise(\"Field not parsed: 'guest_nice'\"))\n  end)\nelse\n  value\nend"}},{"id":"idle-instance-method","html_id":"idle-instance-method","name":"idle","doc":"Returns the \"idle\" stat field.","summary":"<p>Returns the \"idle\" stat field.</p>","abstract":false,"args":[],"args_string":"","source_link":null,"def":{"name":"idle","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if (value = @idle).nil?\n  @idle = (begin\n    parse_stat_file\n    @idle || (raise(\"Field not parsed: 'idle'\"))\n  end)\nelse\n  value\nend"}},{"id":"idle_total-instance-method","html_id":"idle_total-instance-method","name":"idle_total","doc":"Sum of `idle` and `iowait`.","summary":"<p>Sum of <code><a href=\"../Hardware/CPU.html#idle-instance-method\">#idle</a></code> and <code><a href=\"../Hardware/CPU.html#iowait-instance-method\">#iowait</a></code>.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/crystal-community/hardware/blob/4be634b02aac96b93f3edfb4a4b4959a22b8d548/src/cpu.cr#L75","def":{"name":"idle_total","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if (value = @idle_total).nil?\n  @idle_total = (idle + iowait)\nelse\n  value\nend"}},{"id":"iowait-instance-method","html_id":"iowait-instance-method","name":"iowait","doc":"Returns the \"iowait\" stat field.","summary":"<p>Returns the \"iowait\" stat field.</p>","abstract":false,"args":[],"args_string":"","source_link":null,"def":{"name":"iowait","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if (value = @iowait).nil?\n  @iowait = (begin\n    parse_stat_file\n    @iowait || (raise(\"Field not parsed: 'iowait'\"))\n  end)\nelse\n  value\nend"}},{"id":"irq-instance-method","html_id":"irq-instance-method","name":"irq","doc":"Returns the \"irq\" stat field.","summary":"<p>Returns the \"irq\" stat field.</p>","abstract":false,"args":[],"args_string":"","source_link":null,"def":{"name":"irq","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if (value = @irq).nil?\n  @irq = (begin\n    parse_stat_file\n    @irq || (raise(\"Field not parsed: 'irq'\"))\n  end)\nelse\n  value\nend"}},{"id":"nice-instance-method","html_id":"nice-instance-method","name":"nice","doc":"Returns the \"nice\" stat field.","summary":"<p>Returns the \"nice\" stat field.</p>","abstract":false,"args":[],"args_string":"","source_link":null,"def":{"name":"nice","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if (value = @nice).nil?\n  @nice = (begin\n    parse_stat_file\n    @nice || (raise(\"Field not parsed: 'nice'\"))\n  end)\nelse\n  value\nend"}},{"id":"number:Int32?-instance-method","html_id":"number:Int32?-instance-method","name":"number","doc":"CPU number. `nil` means the whole cores in total.","summary":"<p>CPU number.</p>","abstract":false,"args":[],"args_string":" : Int32?","source_link":"https://github.com/crystal-community/hardware/blob/4be634b02aac96b93f3edfb4a4b4959a22b8d548/src/cpu.cr#L14","def":{"name":"number","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32 | ::Nil","visibility":"Public","body":"@number"}},{"id":"softirq-instance-method","html_id":"softirq-instance-method","name":"softirq","doc":"Returns the \"softirq\" stat field.","summary":"<p>Returns the \"softirq\" stat field.</p>","abstract":false,"args":[],"args_string":"","source_link":null,"def":{"name":"softirq","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if (value = @softirq).nil?\n  @softirq = (begin\n    parse_stat_file\n    @softirq || (raise(\"Field not parsed: 'softirq'\"))\n  end)\nelse\n  value\nend"}},{"id":"steal-instance-method","html_id":"steal-instance-method","name":"steal","doc":"Returns the \"steal\" stat field.","summary":"<p>Returns the \"steal\" stat field.</p>","abstract":false,"args":[],"args_string":"","source_link":null,"def":{"name":"steal","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if (value = @steal).nil?\n  @steal = (begin\n    parse_stat_file\n    @steal || (raise(\"Field not parsed: 'steal'\"))\n  end)\nelse\n  value\nend"}},{"id":"system-instance-method","html_id":"system-instance-method","name":"system","doc":"Returns the \"system\" stat field.","summary":"<p>Returns the \"system\" stat field.</p>","abstract":false,"args":[],"args_string":"","source_link":null,"def":{"name":"system","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if (value = @system).nil?\n  @system = (begin\n    parse_stat_file\n    @system || (raise(\"Field not parsed: 'system'\"))\n  end)\nelse\n  value\nend"}},{"id":"total-instance-method","html_id":"total-instance-method","name":"total","doc":"Sum of `used` and `idle_total`","summary":"<p>Sum of <code><a href=\"../Hardware/CPU.html#used-instance-method\">#used</a></code> and <code><a href=\"../Hardware/CPU.html#idle_total-instance-method\">#idle_total</a></code></p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/crystal-community/hardware/blob/4be634b02aac96b93f3edfb4a4b4959a22b8d548/src/cpu.cr#L78","def":{"name":"total","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if (value = @total).nil?\n  @total = (used + idle_total)\nelse\n  value\nend"}},{"id":"usage(previous_cpu:CPU=self):Float64-instance-method","html_id":"usage(previous_cpu:CPU=self):Float64-instance-method","name":"usage","doc":"Returns each CPU usage in percentage based on the previous `CPU`.","summary":"<p>Returns each CPU usage in percentage based on the previous <code><a href=\"../Hardware/CPU.html\">CPU</a></code>.</p>","abstract":false,"args":[{"name":"previous_cpu","doc":null,"default_value":"self","external_name":"previous_cpu","restriction":"CPU"}],"args_string":"(previous_cpu : CPU = <span class=\"k\">self</span>) : Float64","source_link":"https://github.com/crystal-community/hardware/blob/4be634b02aac96b93f3edfb4a4b4959a22b8d548/src/cpu.cr#L81","def":{"name":"usage","args":[{"name":"previous_cpu","doc":null,"default_value":"self","external_name":"previous_cpu","restriction":"CPU"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Float64","visibility":"Public","body":"((used - previous_cpu.used) / (total - previous_cpu.total)) * 100"}},{"id":"usage!:Float64-instance-method","html_id":"usage!:Float64-instance-method","name":"usage!","doc":"Like `#usage`, but mutates the instance.\n\n```\ncpu = Hardware::CPU.new\nloop do\n  sleep 1\n  p cpu.usage!.to_i # => 17\nend\n```","summary":"<p>Like <code><a href=\"../Hardware/CPU.html#usage(previous_cpu:CPU=self):Float64-instance-method\">#usage</a></code>, but mutates the instance.</p>","abstract":false,"args":[],"args_string":" : Float64","source_link":"https://github.com/crystal-community/hardware/blob/4be634b02aac96b93f3edfb4a4b4959a22b8d548/src/cpu.cr#L95","def":{"name":"usage!","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Float64","visibility":"Public","body":"@user || (raise(\"Stat file not previously parsed\"))\nprevious_cpu = self\n@used = @idle_total = @total = nil\nparse_stat_file\nusage(previous_cpu)\n"}},{"id":"used-instance-method","html_id":"used-instance-method","name":"used","doc":"Sum of `user`, `nice`, `system`, `irq`, `softirq` and `steal`.","summary":"<p>Sum of <code><a href=\"../Hardware/CPU.html#user-instance-method\">#user</a></code>, <code><a href=\"../Hardware/CPU.html#nice-instance-method\">#nice</a></code>, <code><a href=\"../Hardware/CPU.html#system-instance-method\">#system</a></code>, <code><a href=\"../Hardware/CPU.html#irq-instance-method\">#irq</a></code>, <code><a href=\"../Hardware/CPU.html#softirq-instance-method\">#softirq</a></code> and <code><a href=\"../Hardware/CPU.html#steal-instance-method\">#steal</a></code>.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/crystal-community/hardware/blob/4be634b02aac96b93f3edfb4a4b4959a22b8d548/src/cpu.cr#L72","def":{"name":"used","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if (value = @used).nil?\n  @used = (((((user + nice) + system) + irq) + softirq) + steal)\nelse\n  value\nend"}},{"id":"user-instance-method","html_id":"user-instance-method","name":"user","doc":"Returns the \"user\" stat field.","summary":"<p>Returns the \"user\" stat field.</p>","abstract":false,"args":[],"args_string":"","source_link":null,"def":{"name":"user","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if (value = @user).nil?\n  @user = (begin\n    parse_stat_file\n    @user || (raise(\"Field not parsed: 'user'\"))\n  end)\nelse\n  value\nend"}}],"macros":[],"types":[]},{"html_id":"github.com/crystal-community/hardware/Hardware/Memory","path":"Hardware/Memory.html","kind":"struct","full_name":"Hardware::Memory","name":"Memory","abstract":false,"superclass":{"html_id":"github.com/crystal-community/hardware/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"github.com/crystal-community/hardware/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/crystal-community/hardware/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/crystal-community/hardware/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"memory.cr","line_number":10,"url":"https://github.com/crystal-community/hardware/blob/4be634b02aac96b93f3edfb4a4b4959a22b8d548/src/memory.cr"}],"repository_name":"github.com/crystal-community/hardware","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/crystal-community/hardware/Hardware","kind":"module","full_name":"Hardware","name":"Hardware"},"doc":"Memory related informations of your system.\n\nMost values are in kB, except HugePages ones.\n\n```\nmemory = Hardware::Memory.new\nmemory.used         # => 2731404\nmemory.percent.to_i # => 32\n```","summary":"<p>Memory related informations of your system.</p>","class_methods":[],"constructors":[{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":"Creates a new `Hardware::Memory` based on the current memory state.","summary":"<p>Creates a new <code><a href=\"../Hardware/Memory.html\">Hardware::Memory</a></code> based on the current memory state.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/crystal-community/hardware/blob/4be634b02aac96b93f3edfb4a4b4959a22b8d548/src/memory.cr#L17","def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"available-instance-method","html_id":"available-instance-method","name":"available","doc":"Returns the available memory in KiloBytes.","summary":"<p>Returns the available memory in KiloBytes.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/crystal-community/hardware/blob/4be634b02aac96b93f3edfb4a4b4959a22b8d548/src/memory.cr#L47","def":{"name":"available","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if (value = @available).nil?\n  @available = ((if mem_available = @meminfo[\"MemAvailable\"]?\n    mem_available\n  else\n    (((@meminfo[\"MemFree\"] - @meminfo[\"Buffers\"]) - @meminfo[\"Cached\"]) - @meminfo[\"SReclaimable\"]) - @meminfo[\"Shmem\"]\n  end).to_i)\nelse\n  value\nend"}},{"id":"meminfo:Hash(String,Int64)-instance-method","html_id":"meminfo:Hash(String,Int64)-instance-method","name":"meminfo","doc":"Returns an Hash from a parsed `/proc/meminfo`.","summary":"<p>Returns an Hash from a parsed <code>/proc/meminfo</code>.</p>","abstract":false,"args":[],"args_string":" : Hash(String, Int64)","source_link":"https://github.com/crystal-community/hardware/blob/4be634b02aac96b93f3edfb4a4b4959a22b8d548/src/memory.cr#L16","def":{"name":"meminfo","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Hash(String, Int64)","visibility":"Public","body":"@meminfo"}},{"id":"percent(used:Bool=true):Float64-instance-method","html_id":"percent(used:Bool=true):Float64-instance-method","name":"percent","doc":"Returns either the used/available memory in percentage.","summary":"<p>Returns either the used/available memory in percentage.</p>","abstract":false,"args":[{"name":"used","doc":null,"default_value":"true","external_name":"used","restriction":"Bool"}],"args_string":"(used : Bool = <span class=\"n\">true</span>) : Float64","source_link":"https://github.com/crystal-community/hardware/blob/4be634b02aac96b93f3edfb4a4b4959a22b8d548/src/memory.cr#L61","def":{"name":"percent","args":[{"name":"used","doc":null,"default_value":"true","external_name":"used","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Float64","visibility":"Public","body":"((used ? self.used : available) * 100) / total"}},{"id":"total-instance-method","html_id":"total-instance-method","name":"total","doc":"Returns the total memory in KiloBytes.","summary":"<p>Returns the total memory in KiloBytes.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/crystal-community/hardware/blob/4be634b02aac96b93f3edfb4a4b4959a22b8d548/src/memory.cr#L44","def":{"name":"total","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if (value = @total).nil?\n  @total = (@meminfo[\"MemTotal\"].to_i)\nelse\n  value\nend"}},{"id":"used-instance-method","html_id":"used-instance-method","name":"used","doc":"Returns the memory used in KiloBytes.","summary":"<p>Returns the memory used in KiloBytes.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/crystal-community/hardware/blob/4be634b02aac96b93f3edfb4a4b4959a22b8d548/src/memory.cr#L58","def":{"name":"used","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if (value = @used).nil?\n  @used = (total - available)\nelse\n  value\nend"}}],"macros":[],"types":[]},{"html_id":"github.com/crystal-community/hardware/Hardware/Net","path":"Hardware/Net.html","kind":"struct","full_name":"Hardware::Net","name":"Net","abstract":false,"superclass":{"html_id":"github.com/crystal-community/hardware/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"github.com/crystal-community/hardware/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/crystal-community/hardware/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/crystal-community/hardware/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"net.cr","line_number":15,"url":"https://github.com/crystal-community/hardware/blob/4be634b02aac96b93f3edfb4a4b4959a22b8d548/src/net.cr"}],"repository_name":"github.com/crystal-community/hardware","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/crystal-community/hardware/Hardware","kind":"module","full_name":"Hardware","name":"Hardware"},"doc":"Network informations about the system or a process like the brandwidth use.\n\nExample of network brandwidth calculation:\n```\nnet = Hardware::Net.new # System network stats\nold_in, old_out = net.in_octets, net.out_octets\nloop do\n  sleep 1\n  net = Hardware::Net.new # Update network stats\n  now_in, now_out = net.in_octets, net.out_octets\n  puts \"down: #{(now_in - old_in) / 1000}kB/s | up: #{(now_out - old_out) / 1000}kB/s\" # => down: 427kB/s | up: 24kB/s\n  old_in, old_out = now_in, now_out\nend\n```","summary":"<p>Network informations about the system or a process like the brandwidth use.</p>","class_methods":[],"constructors":[{"id":"new(pid:Int32?=nil)-class-method","html_id":"new(pid:Int32?=nil)-class-method","name":"new","doc":"Creates a new `Hardware::Net` for the system, or a given PID.","summary":"<p>Creates a new <code><a href=\"../Hardware/Net.html\">Hardware::Net</a></code> for the system, or a given PID.</p>","abstract":false,"args":[{"name":"pid","doc":null,"default_value":"nil","external_name":"pid","restriction":"Int32 | ::Nil"}],"args_string":"(pid : Int32? = <span class=\"n\">nil</span>)","source_link":"https://github.com/crystal-community/hardware/blob/4be634b02aac96b93f3edfb4a4b4959a22b8d548/src/net.cr#L21","def":{"name":"new","args":[{"name":"pid","doc":null,"default_value":"nil","external_name":"pid","restriction":"Int32 | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(pid)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"in_bcast_octets:Int64-instance-method","html_id":"in_bcast_octets:Int64-instance-method","name":"in_bcast_octets","doc":"Returns the \"\"InBcastOctets\"\" field of the `IpExt` field in `net/netstat`. ","summary":"<p>Returns the \"\"InBcastOctets\"\" field of the <code>IpExt</code> field in <code>net/netstat</code>.</p>","abstract":false,"args":[],"args_string":" : Int64","source_link":"https://github.com/crystal-community/hardware/blob/4be634b02aac96b93f3edfb4a4b4959a22b8d548/src/net.cr#L65","def":{"name":"in_bcast_octets","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int64","visibility":"Public","body":"@ip_ext[\"InBcastOctets\"]"}},{"id":"in_bcast_pkts:Int64-instance-method","html_id":"in_bcast_pkts:Int64-instance-method","name":"in_bcast_pkts","doc":"Returns the \"\"InBcastPkts\"\" field of the `IpExt` field in `net/netstat`. ","summary":"<p>Returns the \"\"InBcastPkts\"\" field of the <code>IpExt</code> field in <code>net/netstat</code>.</p>","abstract":false,"args":[],"args_string":" : Int64","source_link":"https://github.com/crystal-community/hardware/blob/4be634b02aac96b93f3edfb4a4b4959a22b8d548/src/net.cr#L65","def":{"name":"in_bcast_pkts","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int64","visibility":"Public","body":"@ip_ext[\"InBcastPkts\"]"}},{"id":"in_ce_pkts:Int64-instance-method","html_id":"in_ce_pkts:Int64-instance-method","name":"in_ce_pkts","doc":"Returns the \"\"InCePkts\"\" field of the `IpExt` field in `net/netstat`.  Only in recent versions of Linux ","summary":"<p>Returns the \"\"InCePkts\"\" field of the <code>IpExt</code> field in <code>net/netstat</code>.</p>","abstract":false,"args":[],"args_string":" : Int64","source_link":"https://github.com/crystal-community/hardware/blob/4be634b02aac96b93f3edfb4a4b4959a22b8d548/src/net.cr#L65","def":{"name":"in_ce_pkts","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int64","visibility":"Public","body":"@ip_ext[\"InCePkts\"]"}},{"id":"in_csum_errors:Int64-instance-method","html_id":"in_csum_errors:Int64-instance-method","name":"in_csum_errors","doc":"Returns the \"\"InCsumErrors\"\" field of the `IpExt` field in `net/netstat`.  Only in recent versions of Linux ","summary":"<p>Returns the \"\"InCsumErrors\"\" field of the <code>IpExt</code> field in <code>net/netstat</code>.</p>","abstract":false,"args":[],"args_string":" : Int64","source_link":"https://github.com/crystal-community/hardware/blob/4be634b02aac96b93f3edfb4a4b4959a22b8d548/src/net.cr#L65","def":{"name":"in_csum_errors","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int64","visibility":"Public","body":"@ip_ext[\"InCsumErrors\"]"}},{"id":"in_ect0_pkts:Int64-instance-method","html_id":"in_ect0_pkts:Int64-instance-method","name":"in_ect0_pkts","doc":"Returns the \"\"InEct0Pkts\"\" field of the `IpExt` field in `net/netstat`.  Only in recent versions of Linux ","summary":"<p>Returns the \"\"InEct0Pkts\"\" field of the <code>IpExt</code> field in <code>net/netstat</code>.</p>","abstract":false,"args":[],"args_string":" : Int64","source_link":"https://github.com/crystal-community/hardware/blob/4be634b02aac96b93f3edfb4a4b4959a22b8d548/src/net.cr#L65","def":{"name":"in_ect0_pkts","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int64","visibility":"Public","body":"@ip_ext[\"InEct0Pkts\"]"}},{"id":"in_ect1_pkts:Int64-instance-method","html_id":"in_ect1_pkts:Int64-instance-method","name":"in_ect1_pkts","doc":"Returns the \"\"InEct1Pkts\"\" field of the `IpExt` field in `net/netstat`.  Only in recent versions of Linux ","summary":"<p>Returns the \"\"InEct1Pkts\"\" field of the <code>IpExt</code> field in <code>net/netstat</code>.</p>","abstract":false,"args":[],"args_string":" : Int64","source_link":"https://github.com/crystal-community/hardware/blob/4be634b02aac96b93f3edfb4a4b4959a22b8d548/src/net.cr#L65","def":{"name":"in_ect1_pkts","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int64","visibility":"Public","body":"@ip_ext[\"InEct1Pkts\"]"}},{"id":"in_mcast_octets:Int64-instance-method","html_id":"in_mcast_octets:Int64-instance-method","name":"in_mcast_octets","doc":"Returns the \"\"InMcastOctets\"\" field of the `IpExt` field in `net/netstat`. ","summary":"<p>Returns the \"\"InMcastOctets\"\" field of the <code>IpExt</code> field in <code>net/netstat</code>.</p>","abstract":false,"args":[],"args_string":" : Int64","source_link":"https://github.com/crystal-community/hardware/blob/4be634b02aac96b93f3edfb4a4b4959a22b8d548/src/net.cr#L65","def":{"name":"in_mcast_octets","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int64","visibility":"Public","body":"@ip_ext[\"InMcastOctets\"]"}},{"id":"in_mcast_pkts:Int64-instance-method","html_id":"in_mcast_pkts:Int64-instance-method","name":"in_mcast_pkts","doc":"Returns the \"\"InMcastPkts\"\" field of the `IpExt` field in `net/netstat`. ","summary":"<p>Returns the \"\"InMcastPkts\"\" field of the <code>IpExt</code> field in <code>net/netstat</code>.</p>","abstract":false,"args":[],"args_string":" : Int64","source_link":"https://github.com/crystal-community/hardware/blob/4be634b02aac96b93f3edfb4a4b4959a22b8d548/src/net.cr#L65","def":{"name":"in_mcast_pkts","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int64","visibility":"Public","body":"@ip_ext[\"InMcastPkts\"]"}},{"id":"in_no_ect_pkts:Int64-instance-method","html_id":"in_no_ect_pkts:Int64-instance-method","name":"in_no_ect_pkts","doc":"Returns the \"\"InNoEctPkts\"\" field of the `IpExt` field in `net/netstat`.  Only in recent versions of Linux ","summary":"<p>Returns the \"\"InNoEctPkts\"\" field of the <code>IpExt</code> field in <code>net/netstat</code>.</p>","abstract":false,"args":[],"args_string":" : Int64","source_link":"https://github.com/crystal-community/hardware/blob/4be634b02aac96b93f3edfb4a4b4959a22b8d548/src/net.cr#L65","def":{"name":"in_no_ect_pkts","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int64","visibility":"Public","body":"@ip_ext[\"InNoEctPkts\"]"}},{"id":"in_no_routes:Int64-instance-method","html_id":"in_no_routes:Int64-instance-method","name":"in_no_routes","doc":"Returns the \"\"InNoRoutes\"\" field of the `IpExt` field in `net/netstat`. ","summary":"<p>Returns the \"\"InNoRoutes\"\" field of the <code>IpExt</code> field in <code>net/netstat</code>.</p>","abstract":false,"args":[],"args_string":" : Int64","source_link":"https://github.com/crystal-community/hardware/blob/4be634b02aac96b93f3edfb4a4b4959a22b8d548/src/net.cr#L65","def":{"name":"in_no_routes","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int64","visibility":"Public","body":"@ip_ext[\"InNoRoutes\"]"}},{"id":"in_octets:Int64-instance-method","html_id":"in_octets:Int64-instance-method","name":"in_octets","doc":"Returns the \"\"InOctets\"\" field of the `IpExt` field in `net/netstat`. ","summary":"<p>Returns the \"\"InOctets\"\" field of the <code>IpExt</code> field in <code>net/netstat</code>.</p>","abstract":false,"args":[],"args_string":" : Int64","source_link":"https://github.com/crystal-community/hardware/blob/4be634b02aac96b93f3edfb4a4b4959a22b8d548/src/net.cr#L65","def":{"name":"in_octets","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int64","visibility":"Public","body":"@ip_ext[\"InOctets\"]"}},{"id":"in_truncated_pkts:Int64-instance-method","html_id":"in_truncated_pkts:Int64-instance-method","name":"in_truncated_pkts","doc":"Returns the \"\"InTruncatedPkts\"\" field of the `IpExt` field in `net/netstat`. ","summary":"<p>Returns the \"\"InTruncatedPkts\"\" field of the <code>IpExt</code> field in <code>net/netstat</code>.</p>","abstract":false,"args":[],"args_string":" : Int64","source_link":"https://github.com/crystal-community/hardware/blob/4be634b02aac96b93f3edfb4a4b4959a22b8d548/src/net.cr#L65","def":{"name":"in_truncated_pkts","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int64","visibility":"Public","body":"@ip_ext[\"InTruncatedPkts\"]"}},{"id":"ip_ext:Hash(String,Int64)-instance-method","html_id":"ip_ext:Hash(String,Int64)-instance-method","name":"ip_ext","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Hash(String, Int64)","source_link":"https://github.com/crystal-community/hardware/blob/4be634b02aac96b93f3edfb4a4b4959a22b8d548/src/net.cr#L20","def":{"name":"ip_ext","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Hash(String, Int64)","visibility":"Public","body":"@ip_ext"}},{"id":"out_bcast_octets:Int64-instance-method","html_id":"out_bcast_octets:Int64-instance-method","name":"out_bcast_octets","doc":"Returns the \"\"OutBcastOctets\"\" field of the `IpExt` field in `net/netstat`. ","summary":"<p>Returns the \"\"OutBcastOctets\"\" field of the <code>IpExt</code> field in <code>net/netstat</code>.</p>","abstract":false,"args":[],"args_string":" : Int64","source_link":"https://github.com/crystal-community/hardware/blob/4be634b02aac96b93f3edfb4a4b4959a22b8d548/src/net.cr#L65","def":{"name":"out_bcast_octets","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int64","visibility":"Public","body":"@ip_ext[\"OutBcastOctets\"]"}},{"id":"out_bcast_pkts:Int64-instance-method","html_id":"out_bcast_pkts:Int64-instance-method","name":"out_bcast_pkts","doc":"Returns the \"\"OutBcastPkts\"\" field of the `IpExt` field in `net/netstat`. ","summary":"<p>Returns the \"\"OutBcastPkts\"\" field of the <code>IpExt</code> field in <code>net/netstat</code>.</p>","abstract":false,"args":[],"args_string":" : Int64","source_link":"https://github.com/crystal-community/hardware/blob/4be634b02aac96b93f3edfb4a4b4959a22b8d548/src/net.cr#L65","def":{"name":"out_bcast_pkts","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int64","visibility":"Public","body":"@ip_ext[\"OutBcastPkts\"]"}},{"id":"out_mcast_octets:Int64-instance-method","html_id":"out_mcast_octets:Int64-instance-method","name":"out_mcast_octets","doc":"Returns the \"\"OutMcastOctets\"\" field of the `IpExt` field in `net/netstat`. ","summary":"<p>Returns the \"\"OutMcastOctets\"\" field of the <code>IpExt</code> field in <code>net/netstat</code>.</p>","abstract":false,"args":[],"args_string":" : Int64","source_link":"https://github.com/crystal-community/hardware/blob/4be634b02aac96b93f3edfb4a4b4959a22b8d548/src/net.cr#L65","def":{"name":"out_mcast_octets","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int64","visibility":"Public","body":"@ip_ext[\"OutMcastOctets\"]"}},{"id":"out_mcast_pkts:Int64-instance-method","html_id":"out_mcast_pkts:Int64-instance-method","name":"out_mcast_pkts","doc":"Returns the \"\"OutMcastPkts\"\" field of the `IpExt` field in `net/netstat`. ","summary":"<p>Returns the \"\"OutMcastPkts\"\" field of the <code>IpExt</code> field in <code>net/netstat</code>.</p>","abstract":false,"args":[],"args_string":" : Int64","source_link":"https://github.com/crystal-community/hardware/blob/4be634b02aac96b93f3edfb4a4b4959a22b8d548/src/net.cr#L65","def":{"name":"out_mcast_pkts","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int64","visibility":"Public","body":"@ip_ext[\"OutMcastPkts\"]"}},{"id":"out_octets:Int64-instance-method","html_id":"out_octets:Int64-instance-method","name":"out_octets","doc":"Returns the \"\"OutOctets\"\" field of the `IpExt` field in `net/netstat`. ","summary":"<p>Returns the \"\"OutOctets\"\" field of the <code>IpExt</code> field in <code>net/netstat</code>.</p>","abstract":false,"args":[],"args_string":" : Int64","source_link":"https://github.com/crystal-community/hardware/blob/4be634b02aac96b93f3edfb4a4b4959a22b8d548/src/net.cr#L65","def":{"name":"out_octets","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int64","visibility":"Public","body":"@ip_ext[\"OutOctets\"]"}},{"id":"pid:Int32?-instance-method","html_id":"pid:Int32?-instance-method","name":"pid","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32?","source_link":"https://github.com/crystal-community/hardware/blob/4be634b02aac96b93f3edfb4a4b4959a22b8d548/src/net.cr#L18","def":{"name":"pid","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32 | ::Nil","visibility":"Public","body":"@pid"}},{"id":"tcp_ext:Hash(String,Int64)-instance-method","html_id":"tcp_ext:Hash(String,Int64)-instance-method","name":"tcp_ext","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Hash(String, Int64)","source_link":"https://github.com/crystal-community/hardware/blob/4be634b02aac96b93f3edfb4a4b4959a22b8d548/src/net.cr#L19","def":{"name":"tcp_ext","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Hash(String, Int64)","visibility":"Public","body":"@tcp_ext"}}],"macros":[],"types":[]},{"html_id":"github.com/crystal-community/hardware/Hardware/PID","path":"Hardware/PID.html","kind":"struct","full_name":"Hardware::PID","name":"PID","abstract":false,"superclass":{"html_id":"github.com/crystal-community/hardware/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"github.com/crystal-community/hardware/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/crystal-community/hardware/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/crystal-community/hardware/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"pid.cr","line_number":9,"url":"https://github.com/crystal-community/hardware/blob/4be634b02aac96b93f3edfb4a4b4959a22b8d548/src/pid.cr"}],"repository_name":"github.com/crystal-community/hardware","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/crystal-community/hardware/Hardware","kind":"module","full_name":"Hardware","name":"Hardware"},"doc":"All informations related to the Processes running on your sytem, defined by Process IDentifiers.\n\n```\npid = Hardware::PID.new           # Default is Process.pid\napp = Hardware::PID.new \"firefox\" # Take the first matching PID\n```","summary":"<p>All informations related to the Processes running on your sytem, defined by Process IDentifiers.</p>","class_methods":[{"id":"each(&:PID->):Nil-class-method","html_id":"each(&amp;:PID-&gt;):Nil-class-method","name":"each","doc":"Yields a `Hardware::PID` for each PID present on the system.","summary":"<p>Yields a <code><a href=\"../Hardware/PID.html\">Hardware::PID</a></code> for each PID present on the system.</p>","abstract":false,"args":[],"args_string":"(& : PID -> ) : Nil","source_link":"https://github.com/crystal-community/hardware/blob/4be634b02aac96b93f3edfb4a4b4959a22b8d548/src/pid.cr#L38","def":{"name":"each","args":[],"double_splat":null,"splat_index":null,"yields":1,"block_arg":{"name":"","doc":null,"default_value":"","external_name":"","restriction":"(PID -> )"},"return_type":"Nil","visibility":"Public","body":"Dir.each_child(\"/proc\") do |pid_dir|\n  if pid = pid_dir.to_i?\n    yield Hardware::PID.new(pid)\n  end\nend"}},{"id":"get_pids(executable:String,&:Int32->)-class-method","html_id":"get_pids(executable:String,&amp;:Int32-&gt;)-class-method","name":"get_pids","doc":"Yield each pids corresponding to a given `executable` name.","summary":"<p>Yield each pids corresponding to a given <code>executable</code> name.</p>","abstract":false,"args":[{"name":"executable","doc":null,"default_value":"","external_name":"executable","restriction":"String"}],"args_string":"(executable : String, & : Int32 -> )","source_link":"https://github.com/crystal-community/hardware/blob/4be634b02aac96b93f3edfb4a4b4959a22b8d548/src/pid.cr#L47","def":{"name":"get_pids","args":[{"name":"executable","doc":null,"default_value":"","external_name":"executable","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":1,"block_arg":{"name":"","doc":null,"default_value":"","external_name":"","restriction":"(Int32 -> )"},"return_type":"","visibility":"Public","body":"each do |pid|\n  if pid.name == executable\n    yield pid.number\n  end\nend"}}],"constructors":[{"id":"new(number:Int32=Process.pid)-class-method","html_id":"new(number:Int32=Process.pid)-class-method","name":"new","doc":"Creates a new `Hardware::PID`.","summary":"<p>Creates a new <code><a href=\"../Hardware/PID.html\">Hardware::PID</a></code>.</p>","abstract":false,"args":[{"name":"number","doc":null,"default_value":"Process.pid","external_name":"number","restriction":"Int32"}],"args_string":"(number : Int32 = <span class=\"t\">Process</span>.pid)","source_link":"https://github.com/crystal-community/hardware/blob/4be634b02aac96b93f3edfb4a4b4959a22b8d548/src/pid.cr#L14","def":{"name":"new","args":[{"name":"number","doc":null,"default_value":"Process.pid","external_name":"number","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(number)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(executable:String)-class-method","html_id":"new(executable:String)-class-method","name":"new","doc":"Creates a new `Hardware::PID` by finding the `executable`'s pid.","summary":"<p>Creates a new <code><a href=\"../Hardware/PID.html\">Hardware::PID</a></code> by finding the <code>executable</code>'s pid.</p>","abstract":false,"args":[{"name":"executable","doc":null,"default_value":"","external_name":"executable","restriction":"String"}],"args_string":"(executable : String)","source_link":"https://github.com/crystal-community/hardware/blob/4be634b02aac96b93f3edfb4a4b4959a22b8d548/src/pid.cr#L19","def":{"name":"new","args":[{"name":"executable","doc":null,"default_value":"","external_name":"executable","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"match_pid = nil\nget_pids(executable) do |pid|\n  match_pid = pid\n  break\nend\nif !match_pid\n  raise(\"no pid for '#{executable}' exists\")\nend\nnew(match_pid)\n"}}],"instance_methods":[{"id":"cmdline:String-instance-method","html_id":"cmdline:String-instance-method","name":"cmdline","doc":"Returns `/proc/``#pid``/cmdline`.","summary":"<p>Returns <code>/proc/</code><code>#pid</code><code>/cmdline</code>.</p>","abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/crystal-community/hardware/blob/4be634b02aac96b93f3edfb4a4b4959a22b8d548/src/pid.cr#L59","def":{"name":"cmdline","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"read_proc(\"cmdline\", &.gets_to_end)"}},{"id":"command:String-instance-method","html_id":"command:String-instance-method","name":"command","doc":"Returns a `String` representation of `/proc/``#pid``/cmdline`.","summary":"<p>Returns a <code>String</code> representation of <code>/proc/</code><code>#pid</code><code>/cmdline</code>.</p>","abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/crystal-community/hardware/blob/4be634b02aac96b93f3edfb4a4b4959a22b8d548/src/pid.cr#L54","def":{"name":"command","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"cmdline.gsub('\\u{0}', ' ')"}},{"id":"exe:String-instance-method","html_id":"exe:String-instance-method","name":"exe","doc":"Returns `/proc/``#pid``/exe` if readable.","summary":"<p>Returns <code>/proc/</code><code>#pid</code><code>/exe</code> if readable.</p>","abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/crystal-community/hardware/blob/4be634b02aac96b93f3edfb4a4b4959a22b8d548/src/pid.cr#L64","def":{"name":"exe","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"File.real_path(\"/proc/#{@number}/exe\")"}},{"id":"exists?:Bool-instance-method","html_id":"exists?:Bool-instance-method","name":"exists?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool","source_link":"https://github.com/crystal-community/hardware/blob/4be634b02aac96b93f3edfb4a4b4959a22b8d548/src/pid.cr#L68","def":{"name":"exists?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"Dir.exists?(\"/proc/#{@number}\")"}},{"id":"memory:Int32-instance-method","html_id":"memory:Int32-instance-method","name":"memory","doc":"Returns the actual memory used by the process.","summary":"<p>Returns the actual memory used by the process.</p>","abstract":false,"args":[],"args_string":" : Int32","source_link":"https://github.com/crystal-community/hardware/blob/4be634b02aac96b93f3edfb4a4b4959a22b8d548/src/pid.cr#L73","def":{"name":"memory","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"statm.first * 4"}},{"id":"name:String-instance-method","html_id":"name:String-instance-method","name":"name","doc":"Returns the PID name based on `#exe` or `#cmdline`.","summary":"<p>Returns the PID name based on <code><a href=\"../Hardware/PID.html#exe:String-instance-method\">#exe</a></code> or <code><a href=\"../Hardware/PID.html#cmdline:String-instance-method\">#cmdline</a></code>.</p>","abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/crystal-community/hardware/blob/4be634b02aac96b93f3edfb4a4b4959a22b8d548/src/pid.cr#L79","def":{"name":"name","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"begin\n  File.basename(exe)\nrescue\n  File.basename(command)\nend"}},{"id":"net:Net-instance-method","html_id":"net:Net-instance-method","name":"net","doc":"Returns `Hardware::Net` for `#pid`","summary":"<p>Returns <code><a href=\"../Hardware/Net.html\">Hardware::Net</a></code> for <code>#pid</code></p>","abstract":false,"args":[],"args_string":" : Net","source_link":"https://github.com/crystal-community/hardware/blob/4be634b02aac96b93f3edfb4a4b4959a22b8d548/src/pid.cr#L86","def":{"name":"net","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Net","visibility":"Public","body":"Net.new(@number)"}},{"id":"number:Int32-instance-method","html_id":"number:Int32-instance-method","name":"number","doc":"Pid number","summary":"<p>Pid number</p>","abstract":false,"args":[],"args_string":" : Int32","source_link":"https://github.com/crystal-community/hardware/blob/4be634b02aac96b93f3edfb4a4b4959a22b8d548/src/pid.cr#L13","def":{"name":"number","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@number"}},{"id":"stat(cpu:CPU?=CPU.new):Stat-instance-method","html_id":"stat(cpu:CPU?=CPU.new):Stat-instance-method","name":"stat","doc":"Returns a parsed `/proc/``#pid``/stat`.\n\nHave CPU information of the process.\n```\npid_stat = Hardware::PID.new.stat\nloop do\n  sleep 1\n  p pid_stat.cpu_usage! # => 1.5\nend\n```","summary":"<p>Returns a parsed <code>/proc/</code><code>#pid</code><code>/stat</code>.</p>","abstract":false,"args":[{"name":"cpu","doc":null,"default_value":"CPU.new","external_name":"cpu","restriction":"CPU | ::Nil"}],"args_string":"(cpu : CPU? = <span class=\"t\">CPU</span>.<span class=\"k\">new</span>) : Stat","source_link":"https://github.com/crystal-community/hardware/blob/4be634b02aac96b93f3edfb4a4b4959a22b8d548/src/pid.cr#L100","def":{"name":"stat","args":[{"name":"cpu","doc":null,"default_value":"CPU.new","external_name":"cpu","restriction":"CPU | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Stat","visibility":"Public","body":"Stat.new(@number, cpu)"}},{"id":"statm:Array(Int32)-instance-method","html_id":"statm:Array(Int32)-instance-method","name":"statm","doc":"Returns a parsed `/proc/``#pid``/statm`.","summary":"<p>Returns a parsed <code>/proc/</code><code>#pid</code><code>/statm</code>.</p>","abstract":false,"args":[],"args_string":" : Array(Int32)","source_link":"https://github.com/crystal-community/hardware/blob/4be634b02aac96b93f3edfb4a4b4959a22b8d548/src/pid.cr#L105","def":{"name":"statm","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(Int32)","visibility":"Public","body":"values = Array(Int32).new\nread_proc(\"statm\") do |__arg1|\n  __arg1.gets_to_end.split(' ') do |int|\n    values << int.to_i\n  end\nend\nvalues\n"}},{"id":"status:Status-instance-method","html_id":"status:Status-instance-method","name":"status","doc":"Returns a parsed `/proc/``#pid``/status`.","summary":"<p>Returns a parsed <code>/proc/</code><code>#pid</code><code>/status</code>.</p>","abstract":false,"args":[],"args_string":" : Status","source_link":"https://github.com/crystal-community/hardware/blob/4be634b02aac96b93f3edfb4a4b4959a22b8d548/src/pid.cr#L114","def":{"name":"status","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Status","visibility":"Public","body":"read_proc(\"status\") do |io|\n  status = Status.new(io)\nend\nstatus.as(Status)\n"}}],"macros":[],"types":[{"html_id":"github.com/crystal-community/hardware/Hardware/PID/Stat","path":"Hardware/PID/Stat.html","kind":"struct","full_name":"Hardware::PID::Stat","name":"Stat","abstract":false,"superclass":{"html_id":"github.com/crystal-community/hardware/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"github.com/crystal-community/hardware/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/crystal-community/hardware/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/crystal-community/hardware/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"pid/stat.cr","line_number":10,"url":"https://github.com/crystal-community/hardware/blob/4be634b02aac96b93f3edfb4a4b4959a22b8d548/src/pid/stat.cr"}],"repository_name":"github.com/crystal-community/hardware","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/crystal-community/hardware/Hardware/PID","kind":"struct","full_name":"Hardware::PID","name":"PID"},"doc":"Parse stat initialized at `Hadware::PID#stat`\n\n```\npid_stat = Hardware::PID::Stat.new\nloop do\n  sleep 1\n  p pid_stat.cpu_usage! # => 1.5\nend\n```","summary":"<p>Parse stat initialized at <code>Hadware::PID#stat</code></p>","class_methods":[],"constructors":[{"id":"new(pid:Int32=Process.pid,cpu:CPU?=CPU.new)-class-method","html_id":"new(pid:Int32=Process.pid,cpu:CPU?=CPU.new)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"pid","doc":null,"default_value":"Process.pid","external_name":"pid","restriction":"Int32"},{"name":"cpu","doc":null,"default_value":"CPU.new","external_name":"cpu","restriction":"CPU | ::Nil"}],"args_string":"(pid : Int32 = <span class=\"t\">Process</span>.pid, cpu : CPU? = <span class=\"t\">CPU</span>.<span class=\"k\">new</span>)","source_link":"https://github.com/crystal-community/hardware/blob/4be634b02aac96b93f3edfb4a4b4959a22b8d548/src/pid/stat.cr#L44","def":{"name":"new","args":[{"name":"pid","doc":null,"default_value":"Process.pid","external_name":"pid","restriction":"Int32"},{"name":"cpu","doc":null,"default_value":"CPU.new","external_name":"cpu","restriction":"CPU | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(pid, cpu)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"cmajflt-instance-method","html_id":"cmajflt-instance-method","name":"cmajflt","doc":"Returns the \"cmajflt\" stat field.","summary":"<p>Returns the \"cmajflt\" stat field.</p>","abstract":false,"args":[],"args_string":"","source_link":null,"def":{"name":"cmajflt","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if (value = @cmajflt).nil?\n  @cmajflt = (begin\n    parse_stat_file\n    @cmajflt || (raise(\"Field not parsed: 'cmajflt'\"))\n  end)\nelse\n  value\nend"}},{"id":"cminflt-instance-method","html_id":"cminflt-instance-method","name":"cminflt","doc":"Returns the \"cminflt\" stat field.","summary":"<p>Returns the \"cminflt\" stat field.</p>","abstract":false,"args":[],"args_string":"","source_link":null,"def":{"name":"cminflt","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if (value = @cminflt).nil?\n  @cminflt = (begin\n    parse_stat_file\n    @cminflt || (raise(\"Field not parsed: 'cminflt'\"))\n  end)\nelse\n  value\nend"}},{"id":"comm-instance-method","html_id":"comm-instance-method","name":"comm","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/crystal-community/hardware/blob/4be634b02aac96b93f3edfb4a4b4959a22b8d548/src/pid/stat.cr#L118","def":{"name":"comm","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if (value = @comm).nil?\n  @comm = (begin\n    parse_stat_file\n    @comm || (raise(\"Field not parsed: 'comm'\"))\n  end)\nelse\n  value\nend"}},{"id":"cpu_time(children:Bool=false):Int32-instance-method","html_id":"cpu_time(children:Bool=false):Int32-instance-method","name":"cpu_time","doc":"Returns the CPU time with or without including ones from `children` processes.","summary":"<p>Returns the CPU time with or without including ones from <code>children</code> processes.</p>","abstract":false,"args":[{"name":"children","doc":null,"default_value":"false","external_name":"children","restriction":"Bool"}],"args_string":"(children : Bool = <span class=\"n\">false</span>) : Int32","source_link":"https://github.com/crystal-community/hardware/blob/4be634b02aac96b93f3edfb4a4b4959a22b8d548/src/pid/stat.cr#L122","def":{"name":"cpu_time","args":[{"name":"children","doc":null,"default_value":"false","external_name":"children","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@cpu_time = (utime + stime).to_i\n@cpu_time_children = @cpu_time + (cutime + cstime).to_i\nchildren ? @cpu_time_children : @cpu_time\n"}},{"id":"cpu_usage!(children:Bool=false,current_cpu:CPU=CPU.new):Float64-instance-method","html_id":"cpu_usage!(children:Bool=false,current_cpu:CPU=CPU.new):Float64-instance-method","name":"cpu_usage!","doc":"Returns the CPU used in percentage.\n```\npid_stat = Hardware::PID::Stat.new\nloop do\n  sleep 1\n  p pid_stat.cpu_usage! # => 1.5\nend\n```","summary":"<p>Returns the CPU used in percentage.</p>","abstract":false,"args":[{"name":"children","doc":null,"default_value":"false","external_name":"children","restriction":"Bool"},{"name":"current_cpu","doc":null,"default_value":"CPU.new","external_name":"current_cpu","restriction":"CPU"}],"args_string":"(children : Bool = <span class=\"n\">false</span>, current_cpu : CPU = <span class=\"t\">CPU</span>.<span class=\"k\">new</span>) : Float64","source_link":"https://github.com/crystal-community/hardware/blob/4be634b02aac96b93f3edfb4a4b4959a22b8d548/src/pid/stat.cr#L141","def":{"name":"cpu_usage!","args":[{"name":"children","doc":null,"default_value":"false","external_name":"children","restriction":"Bool"},{"name":"current_cpu","doc":null,"default_value":"CPU.new","external_name":"current_cpu","restriction":"CPU"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Float64","visibility":"Public","body":"cpu = @cpu || CPU.new\nprevious_cpu_time = children ? @cpu_time_children : @cpu_time\nparse_stat_file\nresult = (((cpu_time(children)) - previous_cpu_time) / (current_cpu.total - cpu.total)) * 100\n@cpu = current_cpu\nresult\n"}},{"id":"cstime-instance-method","html_id":"cstime-instance-method","name":"cstime","doc":"Returns the \"cstime\" stat field.","summary":"<p>Returns the \"cstime\" stat field.</p>","abstract":false,"args":[],"args_string":"","source_link":null,"def":{"name":"cstime","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if (value = @cstime).nil?\n  @cstime = (begin\n    parse_stat_file\n    @cstime || (raise(\"Field not parsed: 'cstime'\"))\n  end)\nelse\n  value\nend"}},{"id":"cutime-instance-method","html_id":"cutime-instance-method","name":"cutime","doc":"Returns the \"cutime\" stat field.","summary":"<p>Returns the \"cutime\" stat field.</p>","abstract":false,"args":[],"args_string":"","source_link":null,"def":{"name":"cutime","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if (value = @cutime).nil?\n  @cutime = (begin\n    parse_stat_file\n    @cutime || (raise(\"Field not parsed: 'cutime'\"))\n  end)\nelse\n  value\nend"}},{"id":"data:Array(String)-instance-method","html_id":"data:Array(String)-instance-method","name":"data","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Array(String)","source_link":"https://github.com/crystal-community/hardware/blob/4be634b02aac96b93f3edfb4a4b4959a22b8d548/src/pid/stat.cr#L13","def":{"name":"data","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(String)","visibility":"Public","body":"@data"}},{"id":"flags-instance-method","html_id":"flags-instance-method","name":"flags","doc":"Returns the \"flags\" stat field.","summary":"<p>Returns the \"flags\" stat field.</p>","abstract":false,"args":[],"args_string":"","source_link":null,"def":{"name":"flags","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if (value = @flags).nil?\n  @flags = (begin\n    parse_stat_file\n    @flags || (raise(\"Field not parsed: 'flags'\"))\n  end)\nelse\n  value\nend"}},{"id":"itrealvalue-instance-method","html_id":"itrealvalue-instance-method","name":"itrealvalue","doc":"Returns the \"itrealvalue\" stat field.","summary":"<p>Returns the \"itrealvalue\" stat field.</p>","abstract":false,"args":[],"args_string":"","source_link":null,"def":{"name":"itrealvalue","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if (value = @itrealvalue).nil?\n  @itrealvalue = (begin\n    parse_stat_file\n    @itrealvalue || (raise(\"Field not parsed: 'itrealvalue'\"))\n  end)\nelse\n  value\nend"}},{"id":"majflt-instance-method","html_id":"majflt-instance-method","name":"majflt","doc":"Returns the \"majflt\" stat field.","summary":"<p>Returns the \"majflt\" stat field.</p>","abstract":false,"args":[],"args_string":"","source_link":null,"def":{"name":"majflt","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if (value = @majflt).nil?\n  @majflt = (begin\n    parse_stat_file\n    @majflt || (raise(\"Field not parsed: 'majflt'\"))\n  end)\nelse\n  value\nend"}},{"id":"minflt-instance-method","html_id":"minflt-instance-method","name":"minflt","doc":"Returns the \"minflt\" stat field.","summary":"<p>Returns the \"minflt\" stat field.</p>","abstract":false,"args":[],"args_string":"","source_link":null,"def":{"name":"minflt","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if (value = @minflt).nil?\n  @minflt = (begin\n    parse_stat_file\n    @minflt || (raise(\"Field not parsed: 'minflt'\"))\n  end)\nelse\n  value\nend"}},{"id":"nice-instance-method","html_id":"nice-instance-method","name":"nice","doc":"Returns the \"nice\" stat field.","summary":"<p>Returns the \"nice\" stat field.</p>","abstract":false,"args":[],"args_string":"","source_link":null,"def":{"name":"nice","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if (value = @nice).nil?\n  @nice = (begin\n    parse_stat_file\n    @nice || (raise(\"Field not parsed: 'nice'\"))\n  end)\nelse\n  value\nend"}},{"id":"numthreads-instance-method","html_id":"numthreads-instance-method","name":"numthreads","doc":"Returns the \"numthreads\" stat field.","summary":"<p>Returns the \"numthreads\" stat field.</p>","abstract":false,"args":[],"args_string":"","source_link":null,"def":{"name":"numthreads","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if (value = @numthreads).nil?\n  @numthreads = (begin\n    parse_stat_file\n    @numthreads || (raise(\"Field not parsed: 'numthreads'\"))\n  end)\nelse\n  value\nend"}},{"id":"parse_stat_file-instance-method","html_id":"parse_stat_file-instance-method","name":"parse_stat_file","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/crystal-community/hardware/blob/4be634b02aac96b93f3edfb4a4b4959a22b8d548/src/pid/stat.cr#L50","def":{"name":"parse_stat_file","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"begin\n  buffer = IO::Memory.new\n  column_num = 0\n  File.open(\"/proc/#{@pid}/stat\", &.each_char do |char|\n    case char\n    when '('\n      if column_num != 1\n        buffer << char\n      end\n    when ')'\n      case column_num\n      when 1\n        @comm = buffer.to_s\n        buffer.clear\n        column_num = column_num + 1\n      when 2\n      else\n        buffer << char\n      end\n    when ' ', '\\n'\n      if buffer.empty?\n        next\n      end\n      case column_num\n      when 0\n      when 1\n        next\n      when 2\n        @state = State.new(buffer.to_s)\n      when 3\n        @ppid = buffer.to_s.to_i64\n      when 4\n        @pgrp = buffer.to_s.to_i64\n      when 5\n        @session = buffer.to_s.to_i64\n      when 6\n        @tty_nr = buffer.to_s.to_i64\n      when 7\n        @tpgid = buffer.to_s.to_i64\n      when 8\n        @flags = buffer.to_s.to_i64\n      when 9\n        @minflt = buffer.to_s.to_i64\n      when 10\n        @cminflt = buffer.to_s.to_i64\n      when 11\n        @majflt = buffer.to_s.to_i64\n      when 12\n        @cmajflt = buffer.to_s.to_i64\n      when 13\n        @utime = buffer.to_s.to_i64\n      when 14\n        @stime = buffer.to_s.to_i64\n      when 15\n        @cutime = buffer.to_s.to_i64\n      when 16\n        @cstime = buffer.to_s.to_i64\n      when 17\n        @priority = buffer.to_s.to_i64\n      when 18\n        @nice = buffer.to_s.to_i64\n      when 19\n        @numthreads = buffer.to_s.to_i64\n      when 20\n        @itrealvalue = buffer.to_s.to_i64\n      when 21\n        @starttime = buffer.to_s.to_i64\n      when 22\n        @vsize = buffer.to_s.to_i64\n      when 23\n        @rss = buffer.to_s.to_i64\n      end\n      column_num = column_num + 1\n      buffer.clear\n    else\n      buffer << char\n    end\n  end)\nrescue ex\n  raise(Exception.new(\"Failed to parse #{@pid}\", ex))\nend"}},{"id":"pgrp-instance-method","html_id":"pgrp-instance-method","name":"pgrp","doc":"Returns the \"pgrp\" stat field.","summary":"<p>Returns the \"pgrp\" stat field.</p>","abstract":false,"args":[],"args_string":"","source_link":null,"def":{"name":"pgrp","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if (value = @pgrp).nil?\n  @pgrp = (begin\n    parse_stat_file\n    @pgrp || (raise(\"Field not parsed: 'pgrp'\"))\n  end)\nelse\n  value\nend"}},{"id":"pid:Int32-instance-method","html_id":"pid:Int32-instance-method","name":"pid","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","source_link":"https://github.com/crystal-community/hardware/blob/4be634b02aac96b93f3edfb4a4b4959a22b8d548/src/pid/stat.cr#L14","def":{"name":"pid","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@pid"}},{"id":"ppid-instance-method","html_id":"ppid-instance-method","name":"ppid","doc":"Generate methods based on stat\nReturns the \"ppid\" stat field.","summary":"<p>Generate methods based on stat Returns the \"ppid\" stat field.</p>","abstract":false,"args":[],"args_string":"","source_link":null,"def":{"name":"ppid","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if (value = @ppid).nil?\n  @ppid = (begin\n    parse_stat_file\n    @ppid || (raise(\"Field not parsed: 'ppid'\"))\n  end)\nelse\n  value\nend"}},{"id":"priority-instance-method","html_id":"priority-instance-method","name":"priority","doc":"Returns the \"priority\" stat field.","summary":"<p>Returns the \"priority\" stat field.</p>","abstract":false,"args":[],"args_string":"","source_link":null,"def":{"name":"priority","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if (value = @priority).nil?\n  @priority = (begin\n    parse_stat_file\n    @priority || (raise(\"Field not parsed: 'priority'\"))\n  end)\nelse\n  value\nend"}},{"id":"rss-instance-method","html_id":"rss-instance-method","name":"rss","doc":"Returns the \"rss\" stat field.","summary":"<p>Returns the \"rss\" stat field.</p>","abstract":false,"args":[],"args_string":"","source_link":null,"def":{"name":"rss","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if (value = @rss).nil?\n  @rss = (begin\n    parse_stat_file\n    @rss || (raise(\"Field not parsed: 'rss'\"))\n  end)\nelse\n  value\nend"}},{"id":"session-instance-method","html_id":"session-instance-method","name":"session","doc":"Returns the \"session\" stat field.","summary":"<p>Returns the \"session\" stat field.</p>","abstract":false,"args":[],"args_string":"","source_link":null,"def":{"name":"session","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if (value = @session).nil?\n  @session = (begin\n    parse_stat_file\n    @session || (raise(\"Field not parsed: 'session'\"))\n  end)\nelse\n  value\nend"}},{"id":"starttime-instance-method","html_id":"starttime-instance-method","name":"starttime","doc":"Returns the \"starttime\" stat field.","summary":"<p>Returns the \"starttime\" stat field.</p>","abstract":false,"args":[],"args_string":"","source_link":null,"def":{"name":"starttime","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if (value = @starttime).nil?\n  @starttime = (begin\n    parse_stat_file\n    @starttime || (raise(\"Field not parsed: 'starttime'\"))\n  end)\nelse\n  value\nend"}},{"id":"state-instance-method","html_id":"state-instance-method","name":"state","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/crystal-community/hardware/blob/4be634b02aac96b93f3edfb4a4b4959a22b8d548/src/pid/stat.cr#L119","def":{"name":"state","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if (value = @state).nil?\n  @state = (begin\n    parse_stat_file\n    @state || (raise(\"Field not parsed: 'state'\"))\n  end)\nelse\n  value\nend"}},{"id":"stime-instance-method","html_id":"stime-instance-method","name":"stime","doc":"Returns the \"stime\" stat field.","summary":"<p>Returns the \"stime\" stat field.</p>","abstract":false,"args":[],"args_string":"","source_link":null,"def":{"name":"stime","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if (value = @stime).nil?\n  @stime = (begin\n    parse_stat_file\n    @stime || (raise(\"Field not parsed: 'stime'\"))\n  end)\nelse\n  value\nend"}},{"id":"tpgid-instance-method","html_id":"tpgid-instance-method","name":"tpgid","doc":"Returns the \"tpgid\" stat field.","summary":"<p>Returns the \"tpgid\" stat field.</p>","abstract":false,"args":[],"args_string":"","source_link":null,"def":{"name":"tpgid","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if (value = @tpgid).nil?\n  @tpgid = (begin\n    parse_stat_file\n    @tpgid || (raise(\"Field not parsed: 'tpgid'\"))\n  end)\nelse\n  value\nend"}},{"id":"tty_nr-instance-method","html_id":"tty_nr-instance-method","name":"tty_nr","doc":"Returns the \"tty_nr\" stat field.","summary":"<p>Returns the \"tty_nr\" stat field.</p>","abstract":false,"args":[],"args_string":"","source_link":null,"def":{"name":"tty_nr","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if (value = @tty_nr).nil?\n  @tty_nr = (begin\n    parse_stat_file\n    @tty_nr || (raise(\"Field not parsed: 'tty_nr'\"))\n  end)\nelse\n  value\nend"}},{"id":"utime-instance-method","html_id":"utime-instance-method","name":"utime","doc":"Returns the \"utime\" stat field.","summary":"<p>Returns the \"utime\" stat field.</p>","abstract":false,"args":[],"args_string":"","source_link":null,"def":{"name":"utime","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if (value = @utime).nil?\n  @utime = (begin\n    parse_stat_file\n    @utime || (raise(\"Field not parsed: 'utime'\"))\n  end)\nelse\n  value\nend"}},{"id":"vsize-instance-method","html_id":"vsize-instance-method","name":"vsize","doc":"Returns the \"vsize\" stat field.","summary":"<p>Returns the \"vsize\" stat field.</p>","abstract":false,"args":[],"args_string":"","source_link":null,"def":{"name":"vsize","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if (value = @vsize).nil?\n  @vsize = (begin\n    parse_stat_file\n    @vsize || (raise(\"Field not parsed: 'vsize'\"))\n  end)\nelse\n  value\nend"}}],"macros":[],"types":[{"html_id":"github.com/crystal-community/hardware/Hardware/PID/Stat/State","path":"Hardware/PID/Stat/State.html","kind":"enum","full_name":"Hardware::PID::Stat::State","name":"State","abstract":false,"superclass":null,"ancestors":[{"html_id":"github.com/crystal-community/hardware/Enum","kind":"struct","full_name":"Enum","name":"Enum"},{"html_id":"github.com/crystal-community/hardware/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"github.com/crystal-community/hardware/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/crystal-community/hardware/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"pid/stat.cr","line_number":17,"url":"https://github.com/crystal-community/hardware/blob/4be634b02aac96b93f3edfb4a4b4959a22b8d548/src/pid/stat.cr"}],"repository_name":"github.com/crystal-community/hardware","program":false,"enum":true,"alias":false,"aliased":"","const":false,"constants":[{"id":"Running","name":"Running","value":"0","doc":null,"summary":null},{"id":"Sleeping","name":"Sleeping","value":"1","doc":null,"summary":null},{"id":"Wait","name":"Wait","value":"2","doc":null,"summary":null},{"id":"Zombie","name":"Zombie","value":"3","doc":null,"summary":null},{"id":"Stopped","name":"Stopped","value":"4","doc":null,"summary":null},{"id":"TracingStop","name":"TracingStop","value":"5","doc":null,"summary":null},{"id":"Paging","name":"Paging","value":"6","doc":null,"summary":null},{"id":"Dead","name":"Dead","value":"7","doc":null,"summary":null},{"id":"Interruptible","name":"Interruptible","value":"8","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/crystal-community/hardware/Hardware/PID/Stat","kind":"struct","full_name":"Hardware::PID::Stat","name":"Stat"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(stat:String)-class-method","html_id":"new(stat:String)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"stat","doc":null,"default_value":"","external_name":"stat","restriction":"String"}],"args_string":"(stat : String)","source_link":"https://github.com/crystal-community/hardware/blob/4be634b02aac96b93f3edfb4a4b4959a22b8d548/src/pid/stat.cr#L28","def":{"name":"new","args":[{"name":"stat","doc":null,"default_value":"","external_name":"stat","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"case stat\nwhen \"R\"\n  Running\nwhen \"S\"\n  Sleeping\nwhen \"D\"\n  Wait\nwhen \"Z\"\n  Zombie\nwhen \"T\"\n  Stopped\nwhen \"t\"\n  TracingStop\nwhen \"W\"\n  Paging\nwhen \"x\", \"X\"\n  Dead\nwhen \"I\"\n  Interruptible\nelse\n  raise(\"Invalid stat: #{stat}\")\nend"}}],"instance_methods":[{"id":"dead?-instance-method","html_id":"dead?-instance-method","name":"dead?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/crystal-community/hardware/blob/4be634b02aac96b93f3edfb4a4b4959a22b8d548/src/pid/stat.cr#L25","def":{"name":"dead?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Dead"}},{"id":"interruptible?-instance-method","html_id":"interruptible?-instance-method","name":"interruptible?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/crystal-community/hardware/blob/4be634b02aac96b93f3edfb4a4b4959a22b8d548/src/pid/stat.cr#L26","def":{"name":"interruptible?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Interruptible"}},{"id":"paging?-instance-method","html_id":"paging?-instance-method","name":"paging?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/crystal-community/hardware/blob/4be634b02aac96b93f3edfb4a4b4959a22b8d548/src/pid/stat.cr#L24","def":{"name":"paging?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Paging"}},{"id":"running?-instance-method","html_id":"running?-instance-method","name":"running?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/crystal-community/hardware/blob/4be634b02aac96b93f3edfb4a4b4959a22b8d548/src/pid/stat.cr#L18","def":{"name":"running?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Running"}},{"id":"sleeping?-instance-method","html_id":"sleeping?-instance-method","name":"sleeping?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/crystal-community/hardware/blob/4be634b02aac96b93f3edfb4a4b4959a22b8d548/src/pid/stat.cr#L19","def":{"name":"sleeping?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Sleeping"}},{"id":"stopped?-instance-method","html_id":"stopped?-instance-method","name":"stopped?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/crystal-community/hardware/blob/4be634b02aac96b93f3edfb4a4b4959a22b8d548/src/pid/stat.cr#L22","def":{"name":"stopped?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Stopped"}},{"id":"tracing_stop?-instance-method","html_id":"tracing_stop?-instance-method","name":"tracing_stop?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/crystal-community/hardware/blob/4be634b02aac96b93f3edfb4a4b4959a22b8d548/src/pid/stat.cr#L23","def":{"name":"tracing_stop?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == TracingStop"}},{"id":"wait?-instance-method","html_id":"wait?-instance-method","name":"wait?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/crystal-community/hardware/blob/4be634b02aac96b93f3edfb4a4b4959a22b8d548/src/pid/stat.cr#L20","def":{"name":"wait?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Wait"}},{"id":"zombie?-instance-method","html_id":"zombie?-instance-method","name":"zombie?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/crystal-community/hardware/blob/4be634b02aac96b93f3edfb4a4b4959a22b8d548/src/pid/stat.cr#L21","def":{"name":"zombie?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Zombie"}}],"macros":[],"types":[]}]},{"html_id":"github.com/crystal-community/hardware/Hardware/PID/Status","path":"Hardware/PID/Status.html","kind":"struct","full_name":"Hardware::PID::Status","name":"Status","abstract":false,"superclass":{"html_id":"github.com/crystal-community/hardware/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"github.com/crystal-community/hardware/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/crystal-community/hardware/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/crystal-community/hardware/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"pid/status.cr","line_number":1,"url":"https://github.com/crystal-community/hardware/blob/4be634b02aac96b93f3edfb4a4b4959a22b8d548/src/pid/status.cr"}],"repository_name":"github.com/crystal-community/hardware","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/crystal-community/hardware/Hardware/PID","kind":"struct","full_name":"Hardware::PID","name":"PID"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"data:Hash(String,String)-instance-method","html_id":"data:Hash(String,String)-instance-method","name":"data","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Hash(String, String)","source_link":"https://github.com/crystal-community/hardware/blob/4be634b02aac96b93f3edfb4a4b4959a22b8d548/src/pid/status.cr#L4","def":{"name":"data","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Hash(String, String)","visibility":"Public","body":"@data"}},{"id":"name-instance-method","html_id":"name-instance-method","name":"name","doc":"PID's status name.","summary":"<p>PID's status name.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/crystal-community/hardware/blob/4be634b02aac96b93f3edfb4a4b4959a22b8d548/src/pid/status.cr#L24","def":{"name":"name","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if (value = @name).nil?\n  @name = (@data[\"Name\"])\nelse\n  value\nend"}},{"id":"state-instance-method","html_id":"state-instance-method","name":"state","doc":"PID's status state.","summary":"<p>PID's status state.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/crystal-community/hardware/blob/4be634b02aac96b93f3edfb4a4b4959a22b8d548/src/pid/status.cr#L30","def":{"name":"state","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if (value = @state).nil?\n  @state = (@data[\"State\"])\nelse\n  value\nend"}},{"id":"umask-instance-method","html_id":"umask-instance-method","name":"umask","doc":"PID's status state.","summary":"<p>PID's status state.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/crystal-community/hardware/blob/4be634b02aac96b93f3edfb4a4b4959a22b8d548/src/pid/status.cr#L27","def":{"name":"umask","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if (value = @umask).nil?\n  @umask = (@data[\"Umask\"])\nelse\n  value\nend"}}],"macros":[],"types":[]}]}]}]}})